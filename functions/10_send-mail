#!/usr/bin/env bash

function sendMail
{
    if [ "$MAIL_ENABLED" == "true" ];then
        # Remove ANSI color codes before sending mail:
        sed 's,\x1B[[(][0-9;]*[a-zA-Z],,g' "$LOG" > "$LOG_REPORT_MAIL"

        echo -ne "â†’ Sending update mail report: "

        if [ "$MOD_ERROR" -gt "0" ];then
            echo "Error while executing module" | mutt -s "[ ERROR ] Update has failed - $HOSTNAME - $DATE_DMY at $TIME - linupdate" -a "$LOG_REPORT_MAIL" -- $MAIL_RECIPIENT
        fi

        if [ ! -z "$UPDATE_EXCLUDE" ];then
            echo "Critical packages have been detected. They have been excluded from update. Check attached update report." | mutt -s "[ WARNING ] Update completed but critical packages update have been ignored - $HOSTNAME - $DATE_DMY at $TIME - linupdate" -a "$LOG_REPORT_MAIL" -- $MAIL_RECIPIENT
        elif [ ! -z "$UPDATE_EXCLUDE" ] && [ "$UPDATE_ERROR" -gt "0" ];then
            echo "Critical packages have been detected. They have been excluded from failed update. Check attached update report." | mutt -s "[ ERROR & WARNING ] Update failed and critical packages excluded - $HOSTNAME - $DATE_DMY at $TIME - linupdate" -a "$LOG_REPORT_MAIL" -- $MAIL_RECIPIENT
        elif [ "$UPDATE_ERROR" -gt "0" ];then
            # If there was error during update
            echo "Update report is attached" | mutt -s "[ ERROR ] Update failed - $HOSTNAME - $DATE_DMY at $TIME - linupdate" -a "$LOG_REPORT_MAIL" -- $MAIL_RECIPIENT
        else
            # If there was no error during update
            echo "Update report is attached" | mutt -s "[ OK ] Update completed - $HOSTNAME - $DATE_DMY at $TIME - linupdate" -a "$LOG_REPORT_MAIL" -- $MAIL_RECIPIENT
        fi

        echo -e "[$GREEN OK $RESET]"
    fi
}