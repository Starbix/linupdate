#!/bin/bash

# Cas Redhat
#if [ "$OS_FAMILY" == "Redhat" ];then
#	# On stoppe le process tail dont le PID est contenu dans HISTORY_TAIL_YUM_PID
#	kill -9 "$HISTORY_TAIL_YUM_PID" &> /dev/null
#
#	# Si il n'y a aucun contenu dans HISTORY_YUM_FILE alors on considère qu'aucun paquet n'a été mis à jour
#	if [ ! -s "$HISTORY_YUM_FILE" ];then
#		# Paquets mis à jour
#		PACKAGES_UPDATED="none"
#		PACKAGES_UPDATED_COUNT="0"
#		# Paquets installés
#		PACKAGES_INSTALLED="none"
#		PACKAGES_INSTALLED_COUNT="0"
#		# Paquets supprimés
#		PACKAGES_DELETED="none"
#		PACKAGES_DELETED_COUNT="0"
#		# Dépendances installées
#		DEPENDENCIES_INSTALLED="none"
#		DEPENDENCIES_INSTALLED_COUNT="0"
#	else
#		# Sinon on récupère la liste des paquets mis à jour, installés, supprimés...
#		PACKAGES_UPDATED=""
#		PACKAGES_INSTALLED=""
#		PACKAGES_DELETED=""
#		DEPENDENCIES_INSTALLED=""
#
#		OLD_IFS="$IFS"
#		IFS=$'\n'
#
#	# Paquets mis à jour et leur version
#		PACKAGES_UPDATED_COUNT=$(grep " Updated: " "$HISTORY_YUM_FILE" | wc -l)
#		PACKAGES_UPDATED_LIST=$(grep " Updated: " "$HISTORY_YUM_FILE" | awk '{print $NF}' | sed -e 's/^1://g')
#		if [ ! -z "$PACKAGES_UPDATED_LIST" ];then
#			# On formatte la liste sur une seule ligne (paquet|version, paquet2|version, ...)
#			for PACKAGE in $(echo "$PACKAGES_UPDATED_LIST");do
#				# dans yum.log les noms de paquets sont suivi par le numéros de version : nano-2.3.1-10.el7.x86_64
#				# Pour récupérer le nom uniquement, on retire tout ce qui commence par un tiret suivi d'un chiffre
#				PACKAGE_NAME=$(echo ${PACKAGE//-[0-9]*/})
#				# A terminer
#				PACKAGE_VERSION=$(echo $PACKAGE | awk '{print $2}')
#				PACKAGES_UPDATED+="${PACKAGE_NAME}|${PACKAGE_VERSION}, "
#			done
#			# Suppression de la dernière virgule et espace :
#			PACKAGES_UPDATED=$(echo "${PACKAGES_UPDATED::-2}")
#		else
#			PACKAGES_UPDATE="none"
#		fi
#
#	# Paquets installés et leur version
#		PACKAGES_INSTALLED_COUNT=$(grep " Installed: " "$HISTORY_YUM_FILE" | wc -l)
#		PACKAGES_INSTALLED_LIST=$(grep " Installed: " "$HISTORY_YUM_FILE" | awk '{print $NF}' | sed -e 's/^1://g')
#		if [ ! -z "$PACKAGES_INSTALLED_LIST" ];then
#			# On formatte la liste sur une seule ligne (paquet|version, paquet2|version, ...)
#			for PACKAGE in $(echo "$PACKAGES_INSTALLED_LIST");do 
#				PACKAGE_NAME=$(echo ${PACKAGE//-[0-9]*/})
#				PACKAGE_VERSION=$(echo $PACKAGE | awk '{print $2}')
#				PACKAGES_INSTALLED+="${PACKAGE_NAME}|${PACKAGE_VERSION}, "
#			done
#			# Suppression de la dernière virgule et espace :
#			PACKAGES_INSTALLED=$(echo "${PACKAGES_INSTALLED::-2}")
#		else
#			PACKAGES_INSTALLED="none"
#		fi
#
#	# Paquets supprimés
#		PACKAGES_DELETED_COUNT=$(grep " Erased: " "$HISTORY_YUM_FILE" | wc -l)
#		PACKAGES_DELETED_LIST=$(grep " Erased: " "$HISTORY_YUM_FILE" | awk '{print $NF}' | sed -e 's/^1://g')
#		if [ ! -z "$PACKAGES_DELETED_LIST" ];then 
#			# On formatte la liste sur une seule ligne (paquet|version, paquet2|version, ...)
#			for PACKAGE in $(echo "$PACKAGES_DELETED_LIST");do
#				PACKAGE_NAME=$(echo ${PACKAGE//-[0-9]*/})
#				PACKAGE_VERSION=$(echo $PACKAGE | awk '{print $2}')
#				PACKAGES_DELETED+="${PACKAGE_NAME}|${PACKAGE_VERSION}, "
#			done
#			# Suppression de la dernière virgule et espace :
#			PACKAGES_DELETED=$(echo "${PACKAGES_DELETED::-2}")
#		else
#			PACKAGES_DELETED="none"
#		fi
#
#	# Dépendances installées
#		# Sauf preuve du contraire, impossible de connaitre les dépendances installées sur Debian
#		DEPENDENCIES_INSTALLED="none"
#		DEPENDENCIES_INSTALLED_COUNT="0"		
#
#		IFS="$OLD_IFS"
#	fi
#fi
#
## Cas Debian
## Normalement un fichier $HISTORY_DPKG_FILE doit exister et contenir la liste de tous les paquets mis à jour, installés ou supprimé lors de l'exécution de la mise à jour
#if [ "$OS_FAMILY" == "Debian" ];then
#	# On stoppe le process tail dont le PID est contenu dans HISTORY_TAIL_DPKG_PID
#	kill -9 "$HISTORY_TAIL_DPKG_PID" &> /dev/null
#
#	# Si il n'y a aucun contenu dans HISTORY_DPKG_FILE alors on considère qu'aucun paquet n'a été mis à jour
#	if [ ! -s "$HISTORY_DPKG_FILE" ];then
#		# Paquets mis à jour
#		PACKAGES_UPDATED="none"
#		PACKAGES_UPDATED_COUNT="0"
#		# Paquets installés
#		PACKAGES_INSTALLED="none"
#		PACKAGES_INSTALLED_COUNT="0"
#		# Paquets supprimés
#		PACKAGES_DELETED="none"
#		PACKAGES_DELETED_COUNT="0"
#		# Dépendances installées
#		DEPENDENCIES_INSTALLED="none"
#		DEPENDENCIES_INSTALLED_COUNT="0"
#	else
#		# Sinon on récupère la liste des paquets mis à jour, installés, supprimés...
#		PACKAGES_UPDATED=""
#		PACKAGES_INSTALLED=""
#		PACKAGES_DELETED=""
#		DEPENDENCIES_INSTALLED=""
#
#		OLD_IFS="$IFS"
#		IFS=$'\n'
#
#	# Paquets mis à jour et leur version
#		PACKAGES_UPDATED_COUNT=$(grep " upgrade " "$HISTORY_DPKG_FILE" | wc -l)
#		PACKAGES_UPDATED_LIST=$(grep " upgrade " "$HISTORY_DPKG_FILE" | awk '{print $4, $6}')
#		if [ ! -z "$PACKAGES_UPDATED_LIST" ];then
#			# On formatte la liste sur une seule ligne (paquet|version, paquet2|version, ...)
#			for PACKAGE in $(echo "$PACKAGES_UPDATED_LIST");do
#				PACKAGE_NAME=$(echo $PACKAGE | awk '{print $1}' | cut -d: -f1) # Les noms de paquets sont généralement suivi par l'architecture (ex : nginx:amd64), on retire donc l'architecture
#				PACKAGE_VERSION=$(echo $PACKAGE | awk '{print $2}')
#				PACKAGES_UPDATED+="${PACKAGE_NAME}|${PACKAGE_VERSION}, "
#			done
#			# Suppression de la dernière virgule et espace :
#			PACKAGES_UPDATED=$(echo "${PACKAGES_UPDATED::-2}")
#		else
#			PACKAGES_UPDATE="none"
#		fi
#
#	# Paquets installés et leur version
#		PACKAGES_INSTALLED_COUNT=$(grep " install " "$HISTORY_DPKG_FILE" | wc -l)
#		PACKAGES_INSTALLED_LIST=$(grep " install " "$HISTORY_DPKG_FILE" | awk '{print $4, $6}')
#		if [ ! -z "$PACKAGES_INSTALLED_LIST" ];then
#			# On formatte la liste sur une seule ligne (paquet|version, paquet2|version, ...)
#			for PACKAGE in $(echo "$PACKAGES_INSTALLED_LIST");do 
#				PACKAGE_NAME=$(echo $PACKAGE | awk '{print $1}' | cut -d: -f1) # Les noms de paquets sont généralement suivi par l'architecture (ex : nginx:amd64), on retire donc l'architecture
#				PACKAGE_VERSION=$(echo $PACKAGE | awk '{print $2}')
#				PACKAGES_INSTALLED+="${PACKAGE_NAME}|${PACKAGE_VERSION}, "
#			done
#			# Suppression de la dernière virgule et espace :
#			PACKAGES_INSTALLED=$(echo "${PACKAGES_INSTALLED::-2}")
#		else
#			PACKAGES_INSTALLED="none"
#		fi
#
#	# Paquets supprimés
#		PACKAGES_DELETED_COUNT=$(grep " remove " "$HISTORY_DPKG_FILE" | wc -l)
#		PACKAGES_DELETED_LIST=$(grep " remove " "$HISTORY_DPKG_FILE" | awk '{print $4, $5}')
#		if [ ! -z "$PACKAGES_DELETED_LIST" ];then 
#			# On formatte la liste sur une seule ligne (paquet|version, paquet2|version, ...)
#			for PACKAGE in $(echo "$PACKAGES_DELETED_LIST");do
#				PACKAGE_NAME=$(echo $PACKAGE | awk '{print $1}' | cut -d: -f1) # Les noms de paquets sont généralement suivi par l'architecture (ex : nginx:amd64), on retire donc l'architecture
#				PACKAGE_VERSION=$(echo $PACKAGE | awk '{print $2}')
#				PACKAGES_DELETED+="${PACKAGE_NAME}|${PACKAGE_VERSION}, "
#			done
#			# Suppression de la dernière virgule et espace :
#			PACKAGES_DELETED=$(echo "${PACKAGES_DELETED::-2}")
#		else
#			PACKAGES_DELETED="none"
#		fi
#
#	# Dépendances installées
#		# Sauf preuve du contraire, impossible de connaitre les dépendances installées sur Debian
#		DEPENDENCIES_INSTALLED="none"
#		DEPENDENCIES_INSTALLED_COUNT="0"		
#
#		IFS="$OLD_IFS"
#	fi
#fi
#
## debug
##echo "mis à jour : $PACKAGES_UPDATED_COUNT | $PACKAGES_UPDATED"
##echo "installé : $PACKAGES_INSTALLED_COUNT | $PACKAGES_INSTALLED"
##echo "suppr : $PACKAGES_DELETED_COUNT | $PACKAGES_DELETED"
#
## Calcul du nombre total de paquets installés sur ce serveur :
#if [ "$OS_FAMILY" == "Redhat" ];then PACKAGES_INSTALLED_TOTAL_COUNT=$(rpm -qa | wc -l);fi	
#if [ "$OS_FAMILY" == "Debian" ];then PACKAGES_INSTALLED_TOTAL_COUNT=$(dpkg --list | egrep "^ii" | wc -l);fi
#
## Si il y a eu une erreur pendant la mise à jour
#if [ "$UPDATE_ERROR" != "0" ];then
#	UPDATE_STATUS="error"
#else 
#	UPDATE_STATUS="done"
#fi 

# Ajout à la suite du fichier d'historique généré au début de la mise à jour, des informations concernant le nb de paquets mis à jour, installés ou supprimés
#echo "|${PACKAGES_UPDATED_COUNT}|${PACKAGES_INSTALLED_COUNT}|${PACKAGES_DELETED_COUNT}|${DEPENDENCIES_INSTALLED_COUNT}|${PACKAGES_INSTALLED_TOTAL_COUNT}|${RAPPORT}|${UPDATE_STATUS}" >> "$HISTORY_FILE"